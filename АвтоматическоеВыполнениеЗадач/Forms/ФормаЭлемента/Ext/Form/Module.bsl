
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Не ЗначениеЗаполнено(Объект.Документы) Тогда
		Для Каждого МетаданныеДокумент Из Метаданные.Документы Цикл
			НоваяСтрока = Объект.Документы.Добавить();
			НоваяСтрока.Документ = МетаданныеДокумент.Имя;
		КонецЦикла;	
	КонецЕсли;
	
	Элементы.ТочкаРезультат.Видимость = ЗначениеЗаполнено(Объект.ТочкаУсловия);
	Элементы.ТочкаУсловия.Видимость = ЗначениеЗаполнено(Объект.ТочкаУсловия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрТаб Из Объект.Документы Цикл
		Если Не СтрТаб.Использовать ИЛИ Не ЗначениеЗаполнено(СтрТаб.Документ) Тогда
			МассивУдаляемыхСтрок.Добавить(СтрТаб);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрТаб Из МассивУдаляемыхСтрок Цикл
		Объект.Документы.Удалить(СтрТаб);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыРеквизитДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СписокРеквизитов = ПролучитьСписокРеквизитов();
	Элементы.ФильтрыРеквизитДокумента.РежимВыбораИзСписка = Истина;
	Элементы.ФильтрыРеквизитДокумента.СписокВыбора.ЗагрузитьЗначения(СписокРеквизитов);
	Элементы.ФильтрыРеквизитДокумента.СписокВыбора.СортироватьПоЗначению();
КонецПроцедуры

&НаСервере
Функция ПролучитьСписокРеквизитов()
	СписокРеквизитов = Новый Массив;
	Для Каждого СтрТаб Из Объект.Документы Цикл
		Если Не СтрТаб.Использовать Тогда 
			Продолжить;
		КонецЕсли;
		ИмяДокумента = СокрЛП(СтрТаб.Документ);
		Реквизиты = Метаданные.Документы[ИмяДокумента].Реквизиты;
		Для Каждого Реквизит Из Реквизиты Цикл
			ИмяРеквизита = Реквизит.Имя;
			Если СписокРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
				СписокРеквизитов.Добавить(ИмяРеквизита);
			КонецЕсли;
		КонецЦикла;
		Реквизиты = Метаданные.Документы[ИмяДокумента].СтандартныеРеквизиты;
		Для Каждого Реквизит Из Реквизиты Цикл
			ИмяРеквизита = Реквизит.Имя;
			Если СписокРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
				СписокРеквизитов.Добавить(ИмяРеквизита);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат СписокРеквизитов;
КонецФункции

&НаСервере
Функция ПолучитьТипРеквизита(ИмяРеквизита)
	ТипРеквизита = Неопределено;
	Если ЗначениеЗаполнено(ИмяРеквизита) Тогда
		Для Каждого СтрТаб Из Объект.Документы Цикл
			ИмяДокумента = СокрЛП(СтрТаб.Документ);
			Реквизит = Метаданные.Документы[ИмяДокумента].Реквизиты.Найти(ИмяРеквизита);
			Если Не Реквизит = Неопределено Тогда
				ТипРеквизита = Реквизит.Тип;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат ТипРеквизита;
КонецФункции

&НаКлиенте
Процедура ФильтрыРеквизитДокументаПриИзменении(Элемент)
	Элементы.Фильтры.ТекущиеДанные.Значение = Неопределено;
	Элементы.Фильтры.ТекущиеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравненияСозданияБизнесПроцессов.Равно");
	ИмяРеквизита = Элементы.Фильтры.ТекущиеДанные.РеквизитДокумента;
	ТипРеквизита = ПолучитьТипРеквизита(ИмяРеквизита);
	Если ЗначениеЗаполнено(ТипРеквизита) Тогда
		Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов(ТипРеквизита);
		Элементы.ФильтрыЗначение.ВыбиратьТип = Истина;
	Иначе
		Если ИмяРеквизита = "Дата" Тогда
			Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("Дата");
			Элементы.ФильтрыЗначение.ВыбиратьТип = Ложь;
		ИначеЕсли ИмяРеквизита = "Номер" Тогда
			Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
			Элементы.ФильтрыЗначение.ВыбиратьТип = Ложь;
		ИначеЕсли ИмяРеквизита = "ПометкаУдаления" Тогда
			Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("Булево");
			Элементы.ФильтрыЗначение.ВыбиратьТип = Ложь;
		ИначеЕсли ИмяРеквизита = "Проведен" Тогда
			Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("Булево");
			Элементы.ФильтрыЗначение.ВыбиратьТип = Ложь;			
		Иначе
			Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("");
			Элементы.ФильтрыЗначение.ВыбиратьТип = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыВидСравненияПриИзменении(Элемент)
	
	Если Элементы.Фильтры.ТекущиеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравненияСозданияБизнесПроцессов.Модифицирован") Тогда 
		Элементы.ФильтрыЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Элементы.ФильтрыЗначение.ВыбиратьТип = Ложь;
		Элементы.Фильтры.ТекущиеДанные.Значение = "Создание бизнес-процесса при изменении значения реквизита!";
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ТочкаМаршрутаПриИзмененииНаСервере()
	
	Объект.ТочкаУсловия = Неопределено;
	Объект.ТочкаРезультат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БизнесПроцессыТочкиМаршрутаВыход.Точка
	|ИЗ
	|	Справочник.БизнесПроцессыТочкиМаршрута.Выход КАК БизнесПроцессыТочкиМаршрутаВыход
	|ГДЕ
	|	БизнесПроцессыТочкиМаршрутаВыход.Ссылка = &Ссылка
	|	И (БизнесПроцессыТочкиМаршрутаВыход.Точка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТочекБизнесПроцессов.Условие)
	|			ИЛИ БизнесПроцессыТочкиМаршрутаВыход.Точка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТочекБизнесПроцессов.ВыборВарианта))";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.ТочкаМаршрута);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Объект.ТочкаУсловия = ВыборкаДетальныеЗаписи.Точка;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда 
		Объект.Наименование = СокрЛП(Объект.ТочкаМаршрута);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкаМаршрутаПриИзменении(Элемент)
	ТочкаМаршрутаПриИзмененииНаСервере();
	Элементы.ТочкаРезультат.Видимость = ЗначениеЗаполнено(Объект.ТочкаУсловия);
	Элементы.ТочкаУсловия.Видимость = ЗначениеЗаполнено(Объект.ТочкаУсловия);
КонецПроцедуры

&НаКлиенте
Процедура ТочкаРезультатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СписокТочек = ПролучитьСписокТочекУсловий();
	Элементы.ТочкаРезультат.РежимВыбораИзСписка = Истина;
	Элементы.ТочкаРезультат.СписокВыбора.ЗагрузитьЗначения(СписокТочек);
	Элементы.ТочкаРезультат.СписокВыбора.СортироватьПоЗначению();
КонецПроцедуры

&НаСервере
Функция ПролучитьСписокТочекУсловий()
	
	СписокТочек = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БизнесПроцессыТочкиМаршрутаВыход.Точка
	|ИЗ
	|	Справочник.БизнесПроцессыТочкиМаршрута.Выход КАК БизнесПроцессыТочкиМаршрутаВыход
	|ГДЕ
	|	БизнесПроцессыТочкиМаршрутаВыход.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.ТочкаУсловия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокТочек.Добавить(ВыборкаДетальныеЗаписи.Точка);
	КонецЦикла;
	
	Возврат СписокТочек;
	
КонецФункции

&НаКлиенте
Процедура ФильтрыПоТабличнымЧастямРеквизитТабличнойЧастиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СписокРеквизитов = ПролучитьСписокРеквизитовТабличныхЧастей();
	Элементы.ФильтрыПоТабличнымЧастямРеквизитТабличнойЧасти.РежимВыбораИзСписка = Истина;
	Элементы.ФильтрыПоТабличнымЧастямРеквизитТабличнойЧасти.СписокВыбора.ЗагрузитьЗначения(СписокРеквизитов);
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыПоТабличнымЧастямРеквизитТабличнойЧастиПриИзменении(Элемент)
	Элементы.ФильтрыПоТабличнымЧастям.ТекущиеДанные.Значение = Неопределено;
	Элементы.ФильтрыПоТабличнымЧастям.ТекущиеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравненияСозданияБизнесПроцессов.Равно");
	ИмяРеквизита = Элементы.ФильтрыПоТабличнымЧастям.ТекущиеДанные.РеквизитТабличнойЧасти;
	ТипРеквизита = ПолучитьТипРеквизитаТабличнойЧасти(ИмяРеквизита);
	Если ЗначениеЗаполнено(ТипРеквизита) Тогда
		Элементы.ФильтрыПоТабличнымЧастямЗначение.ОграничениеТипа = Новый ОписаниеТипов(ТипРеквизита);
		Элементы.ФильтрыПоТабличнымЧастямЗначение.ВыбиратьТип = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФильтрыПоТабличнымЧастямВидСравненияПриИзменении(Элемент)
	Если Элементы.ФильтрыПоТабличнымЧастям.ТекущиеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.ВидыСравненияСозданияБизнесПроцессов.Модифицирован") Тогда 
		Элементы.ФильтрыПоТабличнымЧастямЗначение.ОграничениеТипа = Новый ОписаниеТипов("Строка");
		Элементы.ФильтрыПоТабличнымЧастямЗначение.ВыбиратьТип = Ложь;
		Элементы.ФильтрыПоТабличнымЧастям.ТекущиеДанные.Значение = "Создание бизнес-процесса при изменении значения реквизита!";
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПролучитьСписокРеквизитовТабличныхЧастей()
	СписокРеквизитов = Новый Массив;
	Для Каждого СтрТаб Из Объект.Документы Цикл
		Если Не СтрТаб.Использовать Тогда 
			Продолжить;
		КонецЕсли;
		ИмяДокумента = СокрЛП(СтрТаб.Документ);
		ТабЧасти = Метаданные.Документы[ИмяДокумента].ТабличныеЧасти;
		Для Каждого ТабЧасть Из ТабЧасти Цикл
			Реквизиты = ТабЧасть.Реквизиты;
			Для Каждого Реквизит Из Реквизиты Цикл
				ИмяРеквизита = Реквизит.Имя;
				Если СписокРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
					СписокРеквизитов.Добавить(ИмяРеквизита);
				КонецЕсли;
			КонецЦикла;			
		КонецЦикла;
	КонецЦикла;
	Возврат СписокРеквизитов;
КонецФункции

&НаСервере
Функция ПолучитьТипРеквизитаТабличнойЧасти(ИмяРеквизита)
	ТипРеквизита = Неопределено;
	Если ЗначениеЗаполнено(ИмяРеквизита) Тогда
		Для Каждого СтрТаб Из Объект.Документы Цикл
			ИмяДокумента = СокрЛП(СтрТаб.Документ);
			Для Каждого ТабЧасть Из Метаданные.Документы[ИмяДокумента].ТабличныеЧасти Цикл 
				Реквизит = ТабЧасть.Реквизиты.Найти(ИмяРеквизита);
				Если Не Реквизит = Неопределено Тогда
					ТипРеквизита = Реквизит.Тип;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	Возврат ТипРеквизита;
КонецФункции


